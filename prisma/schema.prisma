// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Login {
  id Int @id @default(autoincrement()) // DB id value for the LOGIN table

  username String    @unique
  password String
  auth_key Int // where the JWT token would go to auth who-is-who
  // Prisma relations
  employee Employee?
  customer Customer?
}

model Employee {
  id      Int   @id @default(autoincrement())
  login   Login @relation(fields: loginId, references: id)
  loginId Int   @unique

  firstName   String
  middleName  String?
  lastName    String
  email       String        @unique
  phone       Int           @unique
  Request     Request[]
  Appointment Appointment[]
  Parameter   Parameter[]
}

model Customer {
  id      Int     @id @default(autoincrement())
  login   Login?  @relation(fields: loginId, references: id)
  loginId Int?    @unique
  Tanks   Tank[]
  Images  Image[]

  firstName   String
  middleName  String?
  lastName    String
  address     String
  email       String?
  phone       Int?
  Request     Request[]
  Appointment Appointment[]
}

model Image {
  id  Int    @id @default(autoincrement())
  url String @unique

  Tank   Tank? @relation(fields: [tankId], references: [id])
  tankId Int?

  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
}

model Tank {
  id      Int      @id @default(autoincrement())
  owner   Customer @relation(fields: ownerId, references: id)
  ownerId Int

  name      String?
  images    Image[]
  Parameter Parameter[]
}

model Request {
  id             Int       @id @default(autoincrement())
  requestCreated DateTime  @default(now())
  requiredBy     DateTime?

  requestedBy Employee @relation(fields: employeeId, references: id)
  employeeId  Int

  forCustomer Customer? @relation(fields: customerId, references: id)
  customerId  Int?

  fromInventory Inventory? @relation(fields: inventoryId, references: id)
  inventoryId   Int?

  amount      Int?
  cost        Int?
  description String?
}

model Appointment {
  id Int @id @default(autoincrement())

  assignedTo Employee @relation(fields: employeeId, references: id)
  employeeId Int

  forCustomer Customer @relation(fields: customerId, references: id)
  customerId  Int

  appointmentScheduled DateTime
  appointmentCompleted DateTime?

  description String?
}

model Inventory {
  id          Int       @id @default(autoincrement())
  sku         Int?
  stock       Int?
  price       Float?
  description String?
  Request     Request[]
}

model Parameter {
  id               Int      @id @default(autoincrement())

  name             String?
  value            Float?
  recordedDateTime DateTime @default(now())

  loggedBy   Employee @relation(fields: employeeId, references: id)
  employeeId Int

  forTank Tank @relation(fields: tankId, references: id)
  tankId  Int
}
